:orphan:

==================================================
ceph-objectstore-tool -- 修改或检查一个 OSD 的状态
==================================================

提纲
====


| **ceph-objectstore-tool** --data-path *path to osd* [--op *list* ]



支持的对象操作：

* (get|set)-bytes [file]
* set-(attr|omap) [file]
* (get|rm)-attr|omap)
* get-omaphdr
* set-omaphdr [file]
* list-attrs
* list-omap
* remove|removeall
* dump
* set-size
* clear-data-digest
* remove-clone-metadata 


描述
====

**ceph-objectstore-tool** is a tool for modifying the state of an OSD. It facilitates manipulating an object's content, removing an object, listing the omap, manipulating the omap header, manipulating the omap key, listing object attributes, and manipulating object attribute keys.

**ceph-objectstore-tool** provides two main modes: (1) a mode that specifies the "--op" argument (for example, **ceph-objectstore-tool** --data-path $PATH_TO_OSD --op $SELECT_OPERATION [--pgid $PGID] [--dry-run]), and (2) a mode for positional object operations. If the second mode is used, the object can be specified by ID or by the JSON output of the --op list. 

| **ceph-objectstore-tool** --data-path *path to osd* [--pgid *$PG_ID* ][--op *command*]
| **ceph-objectstore-tool** --data-path *path to osd* [ --op *list $OBJECT_ID*]

支持的 --op 命令： ::

* info
* log
* remove
* mkfs
* fsck
* repair
* fuse
* dup
* export
* export-remove
* import
* list
* list-slow-omap
* fix-lost
* list-pgs
* dump-journal
* dump-super
* meta-list
* get-osdmap
* set-osdmap
* get-inc-osdmap
* set-inc-osdmap
* mark-complete
* reset-last-complete
* apply-layour-settings
* update-mon-db
* dump-export
* trim-pg-log

安装
====

**ceph-objectstore-tool** 在 `ceph-osd` 软件包里。

实例
====

对象的修改
----------
.. Modifying Objects

这些命令可修改一个 OSD 的状态，使用 ceph-objectstore-tool 时这个 OSD 一定不能运行。

罗列对象和归置组
----------------
.. Listing Objects and Placement Groups

确保目标 OSD 处于停机状态::

   systemctl status ceph-osd@$OSD_NUMBER

用 ceph-objectstore-tool 罗列对象::

    systemctl status ceph-osd@$OSD_NUMBER

找出一个 OSD 内的所有对象::

   ceph-objectstore-tool --data-path $PATH_TO_OSD --op list

找出一个归置组内的所有对象::

   ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID --op list

找出一个对象所属的归置组（ PG ）::

   ceph-objectstore-tool --data-path $PATH_TO_OSD --op list $OBJECT_ID


丢失对象的修正
--------------
.. Fixing Lost Objects   

确保此 OSD 处于停机状态::

   systemctl status ceph-osd@OSD_NUMBER

修正所有丢失的对象::

   ceph-objectstore-tool --data-path $PATH_TO_OSD --op fix-lost

修正指定归置组内、所有丢失的对象::

   ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID --op fix-lost

根据标识符修正一个丢失的对象::

   ceph-objectstore-tool --data-path $PATH_TO_OSD --op fix-lost $OBJECT_ID

修正以前丢失的对象::

   ceph-objectstore-tool --data-path $PATH_TO_OSD --op fix-lost


修改一个对象的内容
------------------
.. Manipulating an object's content

1. 确保目标 OSD 处于停机状态::

    systemctl status ceph-osd@$OSD_NUMBER

2. 通过罗列此 OSD 或归置组内的对象找到要修改的对象。

3. 在对象中写入字节串之前，先做此对象的备份和工作副本。下面是此命令的语法格式::
   
    ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT get-bytes > $OBJECT_FILE_NAME

例如::

   [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}' get-bytes > zone_info.default.backup

   [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}' get-bytes > zone_info.default.working-copy

第一个命令创建了备份副本，而第二个命令创建的是工作副本。

4. 编辑工作副本那个对象文件。

5. 填入此对象的变更字节::
     
     ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT set-bytes < $OBJECT_FILE_NAME

例如::

   [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}' set-bytes < zone_info.default.working-copy
 

对象的删除
----------
.. Removing an Object

用 **ceph-objectstore-tool** 删除对象。对象被删除后，其内容以及引用都会从归置组（ PG ）删除。

删除一个对象（语法）::

   ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT remove

删除一个对象（实例）::

    [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}' remove


罗列对象图
----------
.. Listing the Object Map

用 ceph-objectstore-tool 罗列对象图（ OMAP ）的内容。其输出是一系列键名。

1. 确认此 OSD 处于停机状态：

   语法::

    systemctl status ceph-osd@$OSD_NUMBER

   实例::

    [root@osd ~]# systemctl status ceph-osd@1

2. 罗列其对象图：

   语法::

    ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT list-omap

   实例::

    [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}' list-omap


Manipulating the Object Map Header
----------------------------------
The **ceph-objectstore-tool** utility will output the object map (OMAP) header with the values associated with the object's keys.

Note: If using FileStore as the OSD backend object store, then add the `--journal-path $PATH_TO_JOURNAL` argument when getting or setting the object map header, where the `$PATH_TO_JOURNAL` variable is the absolute path to the OSD journal; for example `/var/lib/ceph/osd/ceph-0/journal`.

Prerequisites
^^^^^^^^^^^^^

    * Having root access to the Ceph OSD node.
    * Stopping the ceph-osd daemon. 

Procedure
^^^^^^^^^

  Verify that the target OSD is down:

  语法::

    systemctl status ceph-osd@$OSD_NUMBER

  实例::

    [root@osd ~]# systemctl status ceph-osd@1

  Get the object map header:

  语法::

        ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT get-omaphdr > $OBJECT_MAP_FILE_NAME

  实例::

        [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}'  get-omaphdr > zone_info.default.omaphdr.txt

  Set the object map header:

  语法::

        ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT get-omaphdr < $OBJECT_MAP_FILE_NAME

  实例::

   [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}'  set-omaphdr < zone_info.default.omaphdr.txt


Manipulating the Object Map Key
-------------------------------

Use the **ceph-objectstore-tool** utility to change the object map (OMAP) key. You need to provide the data path, the placement group identifier (PG ID), the object, and the key in the OMAP.
Note

If using FileStore as the OSD backend object store, then add the `--journal-path $PATH_TO_JOURNAL` argument when getting, setting or removing the object map key, where the `$PATH_TO_JOURNAL` variable is the absolute path to the OSD journal; for example `/var/lib/ceph/osd/ceph-0/journal`.

Prerequisites

    * Having root access to the Ceph OSD node.
    * Stopping the ceph-osd daemon. 

Procedure

    Get the object map key:

    语法::
     
       ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT get-omap $KEY > $OBJECT_MAP_FILE_NAME

   实例::

    [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}'  get-omap "" > zone_info.default.omap.txt

   Set the object map key:

   语法::

    ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT set-omap $KEY < $OBJECT_MAP_FILE_NAME

   实例::

    [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}' set-omap "" < zone_info.default.omap.txt

   Remove the object map key:

   语法::

    ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT rm-omap $KEY

   实例::

    [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}' rm-omap ""


Listing an Object's Attributes
-------------------------------

Use the **ceph-objectstore-tool** utility to list an object's attributes. The output provides you with the object's keys and values.
Note

If you are using FileStore as the OSD backend object store and the journal is on a different disk, you must add the `--journal-path $PATH_TO_JOURNAL` argument when listing an object's attributes, where the `$PATH_TO_JOURNAL` variable is the absolute path to the OSD journal; for example `/var/lib/ceph/osd/ceph-0/journal`.

Prerequisites
^^^^^^^^^^^^^

    * Having root access to the Ceph OSD node.
    * Stopping the ceph-osd daemon. 

Procedure
^^^^^^^^^

   Verify that the target OSD is down:

   语法::

    systemctl status ceph-osd@$OSD_NUMBER

   实例::

    [root@osd ~]# systemctl status ceph-osd@1

   List the object's attributes:

   语法::

    ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT list-attrs

   实例::

    [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}' list-attrs


MANIPULATING THE OBJECT ATTRIBUTE KEY
-------------------------------------

Use the ceph-objectstore-tool utility to change an object's attributes. To manipulate the object's attributes you need the data and journal paths, the placement group identifier (PG ID), the object, and the key in the object's attribute.
Note

If you are using FileStore as the OSD backend object store and the journal is on a different disk, you must add the `--journal-path $PATH_TO_JOURNAL` argument when getting, setting or removing the object's attributes. Where the `$PATH_TO_JOURNAL` variable is the absolute path to the OSD journal, for example `/var/lib/ceph/osd/ceph-0/journal`.

Prerequisites

    * Having root access to the Ceph OSD node.  
    * Stopping the ceph-osd daemon. 

Procedure

    Verify that the target OSD is down.

 语法::

    systemctl status ceph-osd@$OSD_NUMBER

 实例::

    [root@osd ~]# systemctl status ceph-osd@1

 Get the object's attributes:

 语法::

   ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT get-attrs $KEY > $OBJECT_ATTRS_FILE_NAME

 实例::

   [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0  --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}' get-attrs "oid" > zone_info.default.attr.txt

 Set an object's attributes:

 语法::

   ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT  set-attrs $KEY < $OBJECT_ATTRS_FILE_NAME

 实例::

   [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}' set-attrs "oid" < zone_info.default.attr.txt

 Remove an object's attributes:

 语法::

   ceph-objectstore-tool --data-path $PATH_TO_OSD --pgid $PG_ID $OBJECT rm-attrs $KEY

 实例::

   [root@osd ~]# ceph-objectstore-tool --data-path /var/lib/ceph/osd/ceph-0 --pgid 0.1c '{"oid":"zone_info.default","key":"","snapid":-2,"hash":235010478,"max":0,"pool":11,"namespace":""}' rm-attrs "oid"


选项
====

.. option:: --help          

   输出帮助消息

.. option:: --type arg        

   Arg is one of [bluestore (default), filestore, memstore]. This option is needed only if the tool can't tell the type from --data-path.
 
.. option:: --data-path arg

   path to object store, mandatory
   
.. option:: --journal-path arg

   path to journal, use if tool can't find it
   
.. option:: --pgid arg

   PG id, mandatory for info, log, remove, export, export-remove, mark-complete, trim-pg-log, and mandatory for apply-layout-settings if --pool is not specified
                             
.. option:: --pool arg

   Pool name, mandatory for apply-layout-settings if --pgid is not specified

.. option:: --op arg

   Arg is one of [info, log, remove, mkfs, fsck, repair, fuse, dup, export, export-remove, import, list, fix-lost, list-pgs, dump-journal, dump-super, meta-list, get-osdmap, set-osdmap, get-inc-osdmap, set-inc-osdmap, mark-complete, reset-last-complete, apply-layout-settings, update-mon-db, dump-export, trim-pg-log]

.. option:: --epoch arg

   epoch# for get-osdmap and get-inc-osdmap, the current epoch in use if not specified

.. option:: --file arg             
   
   path of file to export, export-remove, import, get-osdmap, set-osdmap, get-inc-osdmap or set-inc-osdmap

.. option:: --mon-store-path arg

   path of monstore to update-mon-db

.. option:: --fsid arg

   fsid for new store created by mkfs

.. option:: --target-data-path arg

   path of target object store (for --op dup)
   
.. option:: --mountpoint arg

   fuse mountpoint

.. option:: --format arg (=json-pretty) 

   Output format which may be json, json-pretty, xml, xml-pretty

.. option:: --debug

   Enable diagnostic output to stderr

.. option:: --force

   Ignore some types of errors and proceed with operation - USE WITH CAUTION: CORRUPTION POSSIBLE NOW OR IN THE FUTURE

.. option:: --skip-journal-replay

   Disable journal replay

.. option:: --skip-mount-omap

   Disable mounting of omap

.. option:: --head

   Find head/snapdir when searching for objects by name

.. option:: --dry-run

   Don't modify the objectstore

.. option:: --namespace arg

   Specify namespace when searching for objects

.. option:: --rmtype arg      

   Specify corrupting object removal 'snapmap' or 'nosnapmap' - TESTING USE ONLY


错误码
======

"Mount failed with '(11) Resource temporarily unavailable" - 可能是\
你试图在一个运行着的 OSD 上运行 **ceph-objectstore-tool** 。


使用范围
========

**rgw-orphan-list** 是 Ceph 的一部分，这是个伸缩力强、开源、
分布式的存储系统，更多信息参见 https://docs.ceph.com 。
