.\" Man page generated from reStructuredText.
.
.TH "CEPH-CONF" "8" "Dec 14, 2021" "dev" "Ceph"
.SH NAME
ceph-conf \- ceph conf file tool
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH 提纲
.nf
\fBceph\-conf\fP \-c \fIconffile\fP \-\-list\-all\-sections
\fBceph\-conf\fP \-c \fIconffile\fP \-L
\fBceph\-conf\fP \-c \fIconffile\fP \-l \fIprefix\fP
\fBceph\-conf\fP \fIkey\fP \-s \fIsection1\fP ...
\fBceph\-conf\fP [\-s \fIsection\fP ] [\-r] \-\-lookup \fIkey\fP
\fBceph\-conf\fP [\-s \fIsection\fP ] \fIkey\fP
.fi
.sp
.SH 描述
.sp
\fBceph\-conf\fP 是用来从 Ceph 配置文件获取信息的工具。像大多数
Ceph 程序一样，你可以用 \fB\-c\fP 选项指定 Ceph 配置文件。
.sp
注意，不像其它 ceph 工具， \fBceph\-conf\fP \fI只能\fP读取配置文件（或返回内置的默认值），它\fI不会\fP从监视器集群获取配置值。正因为如此，我们建议只在严格基于配置文件的旧环境下用
\fBceph\-conf\fP 。新部署的和工具们都依赖于向监视器查询配置（如
\fBceph config get <daemon> <option>\fP ）或用守护进程自身来获取有效的配置选项（如 \fBceph\-osd \-i 123 \-\-show\-config\-value osd_data\fP
）。后一种途径更好，可以从内置默认值（有时候与别的守护进程相差巨大）、配置文件、和监视器的配置数据库中汇总出此守护进程启动时到底会用哪个值。
.SH 功能
.sp
\fBceph\-conf\fP 可执行以下功能之一：
.INDENT 0.0
.TP
.B \-L, \-\-list\-all\-sections
列举配置文件中所有的段落名字。
.UNINDENT
.INDENT 0.0
.TP
.B \-l, \-\-list\-sections *prefix*
列举包含指定前缀的所有段落。例如， \fB\-\-list\-sections mon\fP
会罗列出所有以 \fBmon\fP 打头的段落。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-lookup *key*
搜寻并打印指定的配置信息。注： \fB\-\-lookup\fP 是默认动作。如果没在命令行上指定其它动作，那就默认为查找。
.UNINDENT
.INDENT 0.0
.TP
.B \-h, \-\-help
打印用法摘要。
.UNINDENT
.SH 选项
.INDENT 0.0
.TP
.B \-c *conffile*
指定 Ceph 配置文件。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-filter\-key *key*
过滤段落列表，只留下与 \fIkey\fP 匹配的段落。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-filter\-key\-value *key* \(ga\(ga=\(ga\(ga *value*
过滤段落列表，只留下与 \fIkey\fP/\fIvalue\fP 对匹配的段落。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-name *type.id*
指定要搜寻段落的 Ceph 名字（默认为 client.admin ）。例如指定 \fB\-\-name osd.0\fP 的话，将搜寻 [osd.0] 、 [osd] 、 [global] 。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-pid *pid*
override the \fB$pid\fP when expanding options. For example, if an option is
configured like \fB/var/log/$name.$pid.log\fP, the \fB$pid\fP portion in its
value will be substituded using the PID of \fBceph\-conf\fP instead of the
PID of the process specfied using the \fB\-\-name\fP option.
.UNINDENT
.INDENT 0.0
.TP
.B \-r, \-\-resolve\-search
从生成的、逗号分隔的搜索列表中找出第一个存在、并可以打开的文件。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-section, \-s
额外指定要搜寻的段落，这些段落优先于正常搜索范围。同样，它会返回先匹配到的条目。
.UNINDENT
.SH 实例
.sp
要查明 osd 0 的 \fBosd data\fP 选项会用什么值：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ceph\-conf \-c foo.conf \-\-name osd.0 \-\-lookup "osd data"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
要查明 mds a 的 \fBlog file\fP 选项会用什么值：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ceph\-conf \-c foo.conf \-\-name mds.a "log file"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
要罗列以 "osd" 打头的所有段落：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ceph\-conf \-c foo.conf \-l osd
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
要罗列所有段落：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ceph\-conf \-c foo.conf \-L
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
要打印 "client.0" 所使用的 "keyring" 的路径：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ceph\-conf \-\-name client.0 \-r \-l keyring
.ft P
.fi
.UNINDENT
.UNINDENT
.SH 相关文件
.sp
\fB/etc/ceph/$cluster.conf\fP, \fB~/.ceph/$cluster.conf\fP, \fB$cluster.conf\fP
.sp
没指定的话就用这些 Ceph 配置文件。
.SH 使用范围
.sp
\fBceph\-conf\fP 是 Ceph 的一部分，这是个伸缩力强、开源、分布式的存储系统，更多信息参见 \fI\%https://docs.ceph.com\fP 。
.SH 参考
.sp
ceph(8),
.SH COPYRIGHT
2010-2014, Inktank Storage, Inc. and contributors. Licensed under Creative Commons Attribution Share Alike 3.0 (CC-BY-SA-3.0)
.\" Generated by docutils manpage writer.
.
