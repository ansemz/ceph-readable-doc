.\" Man page generated from reStructuredText.
.
.TH "CEPHADM" "8" "Jan 22, 2022" "dev" "Ceph"
.SH NAME
cephadm \- manage the local cephadm host
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH 提纲
.nf
\fBcephadm**\fP [\-h] [\-\-image IMAGE] [\-\-docker] [\-\-data\-dir DATA_DIR]
.in +2
[\-\-log\-dir LOG_DIR] [\-\-logrotate\-dir LOGROTATE_DIR]
[\-\-unit\-dir UNIT_DIR] [\-\-verbose] [\-\-timeout TIMEOUT]
[\-\-retry RETRY] [\-\-no\-container\-init]
{version,pull,inspect\-image,ls,list\-networks,adopt,rm\-daemon,rm\-cluster,run,shell,enter,ceph\-volume,unit,logs,bootstrap,deploy,check\-host,prepare\-host,add\-repo,rm\-repo,install}
\&...
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBpull\fP
.fi
.sp
.nf
\fBcephadm\fP \fBinspect\-image\fP
.fi
.sp
.nf
\fBcephadm\fP \fBls\fP [\-h] [\-\-no\-detail] [\-\-legacy\-dir LEGACY_DIR]
.fi
.sp
.nf
\fBcephadm\fP \fBlist\-networks\fP
.fi
.sp
.nf
\fBcephadm\fP \fBadopt\fP [\-h] \-\-name NAME \-\-style STYLE [\-\-cluster CLUSTER]
.in +2
[\-\-legacy\-dir LEGACY_DIR] [\-\-config\-json CONFIG_JSON]
[\-\-skip\-firewalld] [\-\-skip\-pull]
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBrm\-daemon\fP [\-h] \-\-name NAME \-\-fsid FSID [\-\-force]
.in +2
[\-\-force\-delete\-data]
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBrm\-cluster\fP [\-h] \-\-fsid FSID [\-\-force]
.fi
.sp
.nf
\fBcephadm\fP \fBrun\fP [\-h] \-\-name NAME \-\-fsid FSID
.fi
.sp
.nf
\fBcephadm\fP \fBshell\fP [\-h] [\-\-fsid FSID] [\-\-name NAME] [\-\-config CONFIG]
[\-\-keyring KEYRING] \-\-mount [MOUNT [MOUNT ...]] [\-\-env ENV]
[\-\-] [command [command ...]]
.fi
.sp
.nf
\fBcephadm\fP \fBenter\fP [\-h] [\-\-fsid FSID] \-\-name NAME [command [command ...]]
.fi
.sp
.nf
\fBcephadm\fP \fBceph\-volume\fP [\-h] [\-\-fsid FSID] [\-\-config\-json CONFIG_JSON]
[\-\-config CONFIG] [\-\-keyring KEYRING]
command [command ...]
.fi
.sp
.nf
\fBcephadm\fP \fBunit\fP  [\-h] [\-\-fsid FSID] \-\-name NAME command
.fi
.sp
.nf
\fBcephadm\fP \fBlogs\fP [\-h] [\-\-fsid FSID] \-\-name NAME [command [command ...]]
.fi
.sp
.nf
\fBcephadm\fP \fBbootstrap\fP [\-h] [\-\-config CONFIG] [\-\-mon\-id MON_ID]
.in +2
[\-\-mon\-addrv MON_ADDRV] [\-\-mon\-ip MON_IP]
[\-\-mgr\-id MGR_ID] [\-\-fsid FSID]
[\-\-log\-to\-file] [\-\-single\-host\-defaults]
[\-\-output\-dir OUTPUT_DIR]
[\-\-output\-keyring OUTPUT_KEYRING]
[\-\-output\-config OUTPUT_CONFIG]
[\-\-output\-pub\-ssh\-key OUTPUT_PUB_SSH_KEY]
[\-\-skip\-ssh]
[\-\-initial\-dashboard\-user INITIAL_DASHBOARD_USER]
[\-\-initial\-dashboard\-password INITIAL_DASHBOARD_PASSWORD]
[\-\-ssl\-dashboard\-port SSL_DASHBOARD_PORT]
[\-\-dashboard\-key DASHBOARD_KEY]
[\-\-dashboard\-crt DASHBOARD_CRT]
[\-\-ssh\-config SSH_CONFIG]
[\-\-ssh\-private\-key SSH_PRIVATE_KEY]
[\-\-ssh\-public\-key SSH_PUBLIC_KEY]
[\-\-ssh\-user SSH_USER] [\-\-skip\-mon\-network]
[\-\-skip\-dashboard] [\-\-dashboard\-password\-noupdate]
[\-\-no\-minimize\-config] [\-\-skip\-ping\-check]
[\-\-skip\-pull] [\-\-skip\-firewalld] [\-\-allow\-overwrite]
[\-\-allow\-fqdn\-hostname] [\-\-skip\-prepare\-host]
[\-\-orphan\-initial\-daemons] [\-\-skip\-monitoring\-stack]
[\-\-apply\-spec APPLY_SPEC]
[\-\-registry\-url REGISTRY_URL]
[\-\-registry\-username REGISTRY_USERNAME]
[\-\-registry\-password REGISTRY_PASSWORD]
[\-\-registry\-json REGISTRY_JSON]
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBdeploy\fP [\-h] \-\-name NAME \-\-fsid FSID [\-\-config CONFIG]
.in +2
[\-\-config\-json CONFIG_JSON] [\-\-keyring KEYRING]
[\-\-key KEY] [\-\-osd\-fsid OSD_FSID] [\-\-skip\-firewalld]
[\-\-tcp\-ports TCP_PORTS] [\-\-reconfig] [\-\-allow\-ptrace]
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBcheck\-host\fP [\-h] [\-\-expect\-hostname EXPECT_HOSTNAME]
.fi
.sp
.nf
\fBcephadm\fP \fBprepare\-host\fP
.fi
.sp
.nf
\fBcephadm\fP \fBadd\-repo\fP [\-h] [\-\-release RELEASE] [\-\-version VERSION]
.in +2
[\-\-dev DEV] [\-\-dev\-commit DEV_COMMIT]
[\-\-gpg\-url GPG_URL] [\-\-repo\-url REPO_URL]
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBrm\-repo\fP
.fi
.sp
.nf
\fBcephadm\fP \fBinstall\fP [\-h] [packages [packages ...]]
.fi
.sp
.nf
\fBcephadm\fP \fBregistry\-login\fP [\-h] [\-\-registry\-url REGISTRY_URL]
.in +2
[\-\-registry\-username REGISTRY_USERNAME]
[\-\-registry\-password REGISTRY_PASSWORD]
[\-\-registry\-json REGISTRY_JSON] [\-\-fsid FSID]
.in -2
.fi
.sp
.SH 描述
.sp
\fBcephadm\fP 是个命令行工具，用于为 cephadm 编排器管理本地主机。
.sp
它有很多命令，可以用于调查和修改当前主机的状态。
.sp
\fBcephadm\fP 不用装在所有主机上，只是在调查某个特定的守护进程时有用。
.SH 选项
.INDENT 0.0
.TP
.B \-\-image IMAGE
容器映像。也可以通过 CEPHADM_IMAGE 环境变量设置
（默认：无）。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-docker
采用 docker 而非 podman (默认: False)
.UNINDENT
.INDENT 0.0
.TP
.B \-\-data\-dir DATA_DIR
守护进程数据的顶级目录（默认: /var/lib/ceph ）
.UNINDENT
.INDENT 0.0
.TP
.B \-\-log\-dir LOG_DIR
守护进程日志的顶级目录（默认： /var/log/ceph ）
.UNINDENT
.INDENT 0.0
.TP
.B \-\-logrotate\-dir LOGROTATE_DIR
logrotate 配置文件的位置（默认： /etc/logrotate.d ）
.UNINDENT
.INDENT 0.0
.TP
.B \-\-unit\-dir UNIT_DIR
systemd 单元的顶级目录（默认： /etc/systemd/system ）
.UNINDENT
.INDENT 0.0
.TP
.B \-\-verbose, \-v
显示调试级的日志消息（默认： False ）
.UNINDENT
.INDENT 0.0
.TP
.B \-\-timeout TIMEOUT
超时秒数（默认：无）
.UNINDENT
.INDENT 0.0
.TP
.B \-\-retry RETRY
重试的最大次数（默认： 10 ）
.UNINDENT
.INDENT 0.0
.TP
.B \-\-no\-container\-init
运行 podman/docker 时不要加 \fI\-\-init\fP (默认: False)
.UNINDENT
.SH 命令
.SS add\-repo
.sp
配置本地软件包仓库，以包含 ceph 软件库。
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-release RELEASE]       使用指定大版本的最新版（如 octopus ）
.IP \(bu 2
[\-\-version VERSION]       采用具体的某个上游版本（ x.y.z ）
.IP \(bu 2
[\-\-dev DEV]               采用指定的最前沿构建，来自 git 分支或标签
.IP \(bu 2
[\-\-dev\-commit DEV_COMMIT] 采用指定的最前沿构建，来自某个 git 提交
.IP \(bu 2
[\-\-gpg\-url GPG_URL]       指定替代的 GPG 密钥位置
.IP \(bu 2
[\-\-repo\-url REPO_URL]     指定替代的 repo 位置
.UNINDENT
.SS adopt
.sp
采用不同的部署工具部署好的守护进程。
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-name NAME, \-n NAME]       守护进程的名字 (type.id)
.IP \(bu 2
[\-\-style STYLE]              部署风格 (legacy, ...)
.IP \(bu 2
[\-\-cluster CLUSTER]          集群的名字
.IP \(bu 2
[\-\-legacy\-dir LEGACY_DIR]    遗留守护进程数据的顶级目录
.IP \(bu 2
[\-\-config\-json CONFIG_JSON]  JSON 格式的额外配置信息
.IP \(bu 2
[\-\-skip\-firewalld]           不要配置 firewalld
.IP \(bu 2
[\-\-skip\-pull]                采用前不要拉取最新映像
.UNINDENT
.SS bootstrap
.sp
在本地主机上自举引导一个集群。它会部署一个 MON 和一个 MGR 、
而后还会在此主机上自动部署监控栈（见 \-\-skip\-monitoring\-stack ）、
并调用 \fBceph orch host add $(hostname)\fP （见 \-\-skip\-ssh ）。
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-config CONFIG, \-c CONFIG]    要合并的 ceph 配置文件
.IP \(bu 2
[\-\-mon\-id MON_ID]               mon id （默认：本地主机名）
.IP \(bu 2
[\-\-mon\-addrv MON_ADDRV]         mon IPs (例如： [v2:localipaddr:3300,v1:localipaddr:6789])
.IP \(bu 2
[\-\-mon\-ip MON_IP]               mon IP 地址
.IP \(bu 2
[\-\-mgr\-id MGR_ID]               mgr id （默认：随机生成）
.IP \(bu 2
[\-\-fsid FSID]                   集群的 FSID
.IP \(bu 2
[\-\-log\-to\-file]                 让集群把日志记录到传统的日志文件中
.IP \(bu 2
[\-\-single\-host\-defaults]        让集群在单台主机上运行
.IP \(bu 2
[\-\-output\-dir OUTPUT_DIR]       写出配置、密钥环和公钥文件的目录
.IP \(bu 2
[\-\-output\-keyring OUTPUT_KEYRING] 写出装载新集群 admin 和 mon 密钥的密钥环文件的路径
.IP \(bu 2
[\-\-output\-config OUTPUT_CONFIG] 写出用于连接新集群的配置文件的路径
.IP \(bu 2
[\-\-output\-pub\-ssh\-key OUTPUT_PUB_SSH_KEY] 写出集群 SSH 公钥的路径
.IP \(bu 2
[\-\-skip\-ssh                     跳过本机上的 ssh 密钥配置
.IP \(bu 2
[\-\-initial\-dashboard\-user INITIAL_DASHBOARD_USER] dashboard 的初始用户
.IP \(bu 2
[\-\-initial\-dashboard\-password INITIAL_DASHBOARD_PASSWORD] 初始 dashboard 用户的初始密码
.IP \(bu 2
[\-\-ssl\-dashboard\-port SSL_DASHBOARD_PORT] 通过 SSL 连接 dashboard 的端口号
.IP \(bu 2
[\-\-dashboard\-key DASHBOARD_KEY] Dashboard 密钥
.IP \(bu 2
[\-\-dashboard\-crt DASHBOARD_CRT] Dashboard 证书
.IP \(bu 2
[\-\-ssh\-config SSH_CONFIG]       SSH 配置
.IP \(bu 2
[\-\-ssh\-private\-key SSH_PRIVATE_KEY] SSH 私钥
.IP \(bu 2
[\-\-ssh\-public\-key SSH_PUBLIC_KEY] SSH 公钥
.IP \(bu 2
[\-\-ssh\-user SSH_USER]           通过 SSH 登陆集群主机的用户名，对于非 root 用户需要预先配置好无密码 sudo
.IP \(bu 2
[\-\-skip\-mon\-network]            根据 mon IP 配置 public_network
.IP \(bu 2
[\-\-skip\-dashboard]              不要启用 Ceph Dashboard
.IP \(bu 2
[\-\-dashboard\-password\-noupdate] 不要强制让用户更改 dashboard 密码
.IP \(bu 2
[\-\-no\-minimize\-config]          不要同化并最小化配置文件
.IP \(bu 2
[\-\-skip\-ping\-check]             不要检验 mon IP 地址是否可以 ping
.IP \(bu 2
[\-\-skip\-pull]                   自举引导前不要拉取最新映像
.IP \(bu 2
[\-\-skip\-firewalld]              不要配置 firewalld
.IP \(bu 2
[\-\-allow\-overwrite]             允许覆盖已有的 \-\-output\-* config/keyring/ssh 文件
.IP \(bu 2
[\-\-allow\-fqdn\-hostname]         允许全资主机名（包含点 "." 的）
.IP \(bu 2
[\-\-skip\-prepare\-host]           不要准备主机
.IP \(bu 2
[\-\-orphan\-initial\-daemons]      不要创建初始的 mon 、 mgr 和崩溃服务规范
.IP \(bu 2
[\-\-skip\-monitoring\-stack]       不要自动提供监控栈(prometheus, grafana, alertmanager, node\-exporter)
.IP \(bu 2
[\-\-apply\-spec APPLY_SPEC]       自举引导之后按规范配置集群（复制 ssh 密钥、增加主机并应用服务）
.IP \(bu 2
[\-\-registry\-url REGISTRY_URL]   要登录的自制注册处的 URL ，例如 docker.io 、 quay.io
.IP \(bu 2
[\-\-registry\-username REGISTRY_USERNAME] 登录自制注册处的帐户用户名
.IP \(bu 2
[\-\-registry\-password REGISTRY_PASSWORD] 登录自制注册处的帐户密码
.IP \(bu 2
[\-\-registry\-json REGISTRY_JSON] 包含注册处登录信息的 JSON 文件（见 registry\-login 命令的文档）
.UNINDENT
.SS ceph\-volume
.sp
在容器内运行 ceph\-volume:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm ceph\-volume inventory
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
位置参数：
* [command]               命令
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]                    集群的 FSID
.IP \(bu 2
[\-\-config\-json CONFIG_JSON]      有配置和（ client.bootrap\-osd ）密钥的 JSON 文件
.IP \(bu 2
[\-\-config CONFIG, \-c CONFIG]     ceph 配置文件
.IP \(bu 2
[\-\-keyring KEYRING, \-k KEYRING]  要传进容器的 ceph.keyring
.UNINDENT
.SS check\-host
.sp
检查主机配置是否适合 Ceph 集群。
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-expect\-hostname EXPECT_HOSTNAME] 检查主机名与期望的值是否匹配
.UNINDENT
.SS deploy
.sp
在本地主机上部署一个守护进程。编排器 CLI 会用到：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm shell \-\- ceph orch apply <type> ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-name NAME]               守护进程的名字 (type.id)
.IP \(bu 2
[\-\-fsid FSID]               集群的 FSID
.IP \(bu 2
[\-\-config CONFIG, \-c CONFIG] 新守护进程的配置文件
.IP \(bu 2
[\-\-config\-json CONFIG_JSON] JSON 格式的附加配置信息
.IP \(bu 2
[\-\-keyring KEYRING]         新守护进程的密钥环
.IP \(bu 2
[\-\-key KEY]                 新守护进程的密钥
.IP \(bu 2
[\-\-osd\-fsid OSD_FSID]       OSD uuid ，如果在创建 OSD 容器
.IP \(bu 2
[\-\-skip\-firewalld]          不要配置 firewalld
.IP \(bu 2
[\-\-tcp\-ports                要在主机防火墙上开放的 TCP 端口列表
.IP \(bu 2
[\-\-reconfig]                重新配置一个之前部署的守护进程
.IP \(bu 2
[\-\-allow\-ptrace]            在守护进程容器中打开 SYS_PTRACE
.UNINDENT
.SS enter
.sp
在运行着的守护进程容器内打开一个交互式 shell:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm enter \-\-name mgr.myhost.ysubfo
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
位置参数：
* [command]               命令
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]           集群的 FSID
.IP \(bu 2
[\-\-name NAME, \-n NAME]  守护进程的名字 (type.id)
.UNINDENT
.SS install
.sp
安装 ceph 软件包。
.sp
位置参数：
.INDENT 0.0
.IP \(bu 2
[packages]    软件包
.UNINDENT
.SS inspect\-image
.sp
检查本地的 ceph 容器映像。
.SS list\-networks
.sp
罗列 IP 网络段。
.SS ls
.sp
罗列 \fB这台\fP 主机上 cephadm 知道的守护进程例程：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ cephadm ls
[
    {
        "style": "cephadm:v1",
        "name": "mgr.storage\-14b\-1.ysubfo",
        "fsid": "5110cb22\-8332\-11ea\-9148\-0894ef7e8bdc",
        "enabled": true,
        "state": "running",
        "container_id": "8562de72370a3836473ecfff8a22c9ccdd99815386b4692a2b30924fb5493c44",
        "container_image_name": "docker.io/ceph/ceph:v15",
        "container_image_id": "bc83a388465f0568dab4501fb7684398dca8b50ca12a342a57f21815721723c2",
        "version": "15.2.1",
        "started": "2020\-04\-21T01:16:41.831456",
        "created": "2020\-04\-21T01:16:41.775024",
        "deployed": "2020\-04\-21T01:16:41.415021",
        "configured": "2020\-04\-21T01:16:41.775024"
    },
\&...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-no\-detail]             不要显示守护进程状态
.IP \(bu 2
[\-\-legacy\-dir LEGACY_DIR] 遗留守护进程数据的顶级目录
.UNINDENT
.SS logs
.sp
打印一个守护进程容器的 journald 日志：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm logs \-\-name mgr.myhost.ysubfo
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
和这个相似：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
journalctl \-u mgr.myhost.ysubfo
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
还能指定额外的日志参数：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm logs \-\-name mgr.myhost.ysubfo \-\- \-n 20 # last 20 lines
cephadm logs \-\-name mgr.myhost.ysubfo \-\- \-f # follow the log
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
位置参数：
.INDENT 0.0
.IP \(bu 2
[command]               命令（可选的）
.UNINDENT
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]           集群的 FSID
.IP \(bu 2
[\-\-name NAME, \-n NAME]  守护进程的名字 (type.id)
.UNINDENT
.SS prepare\-host
.sp
准备一台主机给 cephadm 用。
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-expect\-hostname EXPECT_HOSTNAME] 设置主机名
.UNINDENT
.SS pull
.sp
拉取 ceph 映像：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm pull
.ft P
.fi
.UNINDENT
.UNINDENT
.SS registry\-login
.sp
向 cephadm 提供登录信息，以便与注册处认证（ URL 、用户名和密码）。
Cephadm 将尝试让调用主机登录进那个注册处：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm registry\-login \-\-registry\-url [REGISTRY_URL] \-\-registry\-username [USERNAME]
                       \-\-registry\-password [PASSWORD]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
也可以用如下格式的 JSON 文件装载登录信息：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
 "url":"REGISTRY_URL",
 "username":"REGISTRY_USERNAME",
 "password":"REGISTRY_PASSWORD"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
然后用命令代入它：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm registry\-login \-\-registry\-json [JSON FILE]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-registry\-url REGISTRY_URL]   要登录的注册处的 URL ，例如 docker.io 、 quay.io
.IP \(bu 2
[\-\-registry\-username REGISTRY_USERNAME] 登录注册处的帐户用户名
.IP \(bu 2
[\-\-registry\-password REGISTRY_PASSWORD] 登录注册处的帐户密码
.IP \(bu 2
[\-\-registry\-json REGISTRY_JSON] 包含注册处登录信息的 JSON 文件
.IP \(bu 2
[\-\-fsid FSID]                   集群的 FSID
.UNINDENT
.SS rm\-daemon
.sp
删除某个特定的守护进程例程。
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-name NAME, \-n NAME]  守护进程的名字 (type.id)
.IP \(bu 2
[\-\-fsid FSID]           集群的 FSID
.IP \(bu 2
[\-\-force]               继续进行，即使这样可能损坏有价值的数据
.IP \(bu 2
[\-\-force\-delete\-data]   不做备份，直接删除有用的守护进程数据
.UNINDENT
.SS rm\-cluster
.sp
删除一个集群的所有守护进程。
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]  集群的 FSID
.IP \(bu 2
[\-\-force]      继续进行，即使这样可能损坏有价值的数据。
.UNINDENT
.SS rm\-repo
.sp
删除软件仓库配置。
.SS run
.sp
在容器内运行一个 ceph 守护进程，在前台。
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-name NAME, \-n NAME]  守护进程的名字 (type.id)
.IP \(bu 2
[\-\-fsid FSID]           集群的 FSID
.UNINDENT
.SS shell
.sp
启动一个交互式 shell:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm shell
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
或者容器内一个特定的命令：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm shell \-\- ceph orch ls
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
位置参数：
.INDENT 0.0
.IP \(bu 2
[command]               命令（可选的）
.UNINDENT
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]                   集群的 FSID
.IP \(bu 2
[\-\-name NAME, \-n NAME]          守护进程的名字 (type.id)
.IP \(bu 2
[\-\-config CONFIG, \-c CONFIG]    要传给容器的 ceph.conf
.IP \(bu 2
[\-\-keyring KEYRING, \-k KEYRING] 要传给容器的 ceph.keyring
.IP \(bu 2
[\-\-mount MOUNT, \-m MOUNT]       在容器内的 /mnt 下挂载一个文件或目录
.IP \(bu 2
[\-\-env ENV, \-e ENV]             设置环境变量
.UNINDENT
.SS unit
.sp
操作守护进程的 systemd 单元。
.sp
位置参数：
.INDENT 0.0
.IP \(bu 2
[command]               systemd 命令 (start, stop, restart, enable, disable, ...)
.UNINDENT
.sp
参数：
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]           集群的 FSID
.IP \(bu 2
[\-\-name NAME, \-n NAME]  守护进程的名字 (type.id)
.UNINDENT
.SH 使用范围
.sp
\fBcephadm\fP 是 Ceph 的一部分，这是个伸缩力强、开源、
分布式的存储系统，更多信息参见 \fI\%https://docs.ceph.com\fP 。
.SH 参考
.sp
ceph\-volume(8),
.SH COPYRIGHT
2010-2014, Inktank Storage, Inc. and contributors. Licensed under Creative Commons Attribution Share Alike 3.0 (CC-BY-SA-3.0)
.\" Generated by docutils manpage writer.
.
