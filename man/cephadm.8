.\" Man page generated from reStructuredText.
.
.TH "CEPHADM" "8" "Nov 23, 2021" "dev" "Ceph"
.SH NAME
cephadm \- manage the local cephadm host
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.nf
\fBcephadm**\fP [\-h] [\-\-image IMAGE] [\-\-docker] [\-\-data\-dir DATA_DIR]
.in +2
[\-\-log\-dir LOG_DIR] [\-\-logrotate\-dir LOGROTATE_DIR]
[\-\-unit\-dir UNIT_DIR] [\-\-verbose] [\-\-timeout TIMEOUT]
[\-\-retry RETRY] [\-\-no\-container\-init]
{version,pull,inspect\-image,ls,list\-networks,adopt,rm\-daemon,rm\-cluster,run,shell,enter,ceph\-volume,unit,logs,bootstrap,deploy,check\-host,prepare\-host,add\-repo,rm\-repo,install}
\&...
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBpull\fP
.fi
.sp
.nf
\fBcephadm\fP \fBinspect\-image\fP
.fi
.sp
.nf
\fBcephadm\fP \fBls\fP [\-h] [\-\-no\-detail] [\-\-legacy\-dir LEGACY_DIR]
.fi
.sp
.nf
\fBcephadm\fP \fBlist\-networks\fP
.fi
.sp
.nf
\fBcephadm\fP \fBadopt\fP [\-h] \-\-name NAME \-\-style STYLE [\-\-cluster CLUSTER]
.in +2
[\-\-legacy\-dir LEGACY_DIR] [\-\-config\-json CONFIG_JSON]
[\-\-skip\-firewalld] [\-\-skip\-pull]
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBrm\-daemon\fP [\-h] \-\-name NAME \-\-fsid FSID [\-\-force]
.in +2
[\-\-force\-delete\-data]
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBrm\-cluster\fP [\-h] \-\-fsid FSID [\-\-force]
.fi
.sp
.nf
\fBcephadm\fP \fBrun\fP [\-h] \-\-name NAME \-\-fsid FSID
.fi
.sp
.nf
\fBcephadm\fP \fBshell\fP [\-h] [\-\-fsid FSID] [\-\-name NAME] [\-\-config CONFIG]
[\-\-keyring KEYRING] \-\-mount [MOUNT [MOUNT ...]] [\-\-env ENV]
[\-\-] [command [command ...]]
.fi
.sp
.nf
\fBcephadm\fP \fBenter\fP [\-h] [\-\-fsid FSID] \-\-name NAME [command [command ...]]
.fi
.sp
.nf
\fBcephadm\fP \fBceph\-volume\fP [\-h] [\-\-fsid FSID] [\-\-config\-json CONFIG_JSON]
[\-\-config CONFIG] [\-\-keyring KEYRING]
command [command ...]
.fi
.sp
.nf
\fBcephadm\fP \fBunit\fP  [\-h] [\-\-fsid FSID] \-\-name NAME command
.fi
.sp
.nf
\fBcephadm\fP \fBlogs\fP [\-h] [\-\-fsid FSID] \-\-name NAME [command [command ...]]
.fi
.sp
.nf
\fBcephadm\fP \fBbootstrap\fP [\-h] [\-\-config CONFIG] [\-\-mon\-id MON_ID]
.in +2
[\-\-mon\-addrv MON_ADDRV] [\-\-mon\-ip MON_IP]
[\-\-mgr\-id MGR_ID] [\-\-fsid FSID]
[\-\-log\-to\-file] [\-\-single\-host\-defaults]
[\-\-output\-dir OUTPUT_DIR]
[\-\-output\-keyring OUTPUT_KEYRING]
[\-\-output\-config OUTPUT_CONFIG]
[\-\-output\-pub\-ssh\-key OUTPUT_PUB_SSH_KEY]
[\-\-skip\-ssh]
[\-\-initial\-dashboard\-user INITIAL_DASHBOARD_USER]
[\-\-initial\-dashboard\-password INITIAL_DASHBOARD_PASSWORD]
[\-\-ssl\-dashboard\-port SSL_DASHBOARD_PORT]
[\-\-dashboard\-key DASHBOARD_KEY]
[\-\-dashboard\-crt DASHBOARD_CRT]
[\-\-ssh\-config SSH_CONFIG]
[\-\-ssh\-private\-key SSH_PRIVATE_KEY]
[\-\-ssh\-public\-key SSH_PUBLIC_KEY]
[\-\-ssh\-user SSH_USER] [\-\-skip\-mon\-network]
[\-\-skip\-dashboard] [\-\-dashboard\-password\-noupdate]
[\-\-no\-minimize\-config] [\-\-skip\-ping\-check]
[\-\-skip\-pull] [\-\-skip\-firewalld] [\-\-allow\-overwrite]
[\-\-allow\-fqdn\-hostname] [\-\-skip\-prepare\-host]
[\-\-orphan\-initial\-daemons] [\-\-skip\-monitoring\-stack]
[\-\-apply\-spec APPLY_SPEC]
[\-\-registry\-url REGISTRY_URL]
[\-\-registry\-username REGISTRY_USERNAME]
[\-\-registry\-password REGISTRY_PASSWORD]
[\-\-registry\-json REGISTRY_JSON]
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBdeploy\fP [\-h] \-\-name NAME \-\-fsid FSID [\-\-config CONFIG]
.in +2
[\-\-config\-json CONFIG_JSON] [\-\-keyring KEYRING]
[\-\-key KEY] [\-\-osd\-fsid OSD_FSID] [\-\-skip\-firewalld]
[\-\-tcp\-ports TCP_PORTS] [\-\-reconfig] [\-\-allow\-ptrace]
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBcheck\-host\fP [\-h] [\-\-expect\-hostname EXPECT_HOSTNAME]
.fi
.sp
.nf
\fBcephadm\fP \fBprepare\-host\fP
.fi
.sp
.nf
\fBcephadm\fP \fBadd\-repo\fP [\-h] [\-\-release RELEASE] [\-\-version VERSION]
.in +2
[\-\-dev DEV] [\-\-dev\-commit DEV_COMMIT]
[\-\-gpg\-url GPG_URL] [\-\-repo\-url REPO_URL]
.in -2
.fi
.sp
.nf
\fBcephadm\fP \fBrm\-repo\fP
.fi
.sp
.nf
\fBcephadm\fP \fBinstall\fP [\-h] [packages [packages ...]]
.fi
.sp
.nf
\fBcephadm\fP \fBregistry\-login\fP [\-h] [\-\-registry\-url REGISTRY_URL]
.in +2
[\-\-registry\-username REGISTRY_USERNAME]
[\-\-registry\-password REGISTRY_PASSWORD]
[\-\-registry\-json REGISTRY_JSON] [\-\-fsid FSID]
.in -2
.fi
.sp
.SH DESCRIPTION
.sp
\fBcephadm\fP is a command line tool to manage the local host for the cephadm orchestrator.
.sp
It provides commands to investigate and modify the state of the current host.
.sp
\fBcephadm\fP is not required on all hosts, but useful when investigating a particular
daemon.
.SH OPTIONS
.INDENT 0.0
.TP
.B \-\-image IMAGE
container image. Can also be set via the
"CEPHADM_IMAGE" env var (default: None)
.UNINDENT
.INDENT 0.0
.TP
.B \-\-docker
use docker instead of podman (default: False)
.UNINDENT
.INDENT 0.0
.TP
.B \-\-data\-dir DATA_DIR
base directory for daemon data (default: /var/lib/ceph)
.UNINDENT
.INDENT 0.0
.TP
.B \-\-log\-dir LOG_DIR
base directory for daemon logs (default: /var/log/ceph)
.UNINDENT
.INDENT 0.0
.TP
.B \-\-logrotate\-dir LOGROTATE_DIR
location of logrotate configuration files (default: /etc/logrotate.d)
.UNINDENT
.INDENT 0.0
.TP
.B \-\-unit\-dir UNIT_DIR
base directory for systemd units (default: /etc/systemd/system)
.UNINDENT
.INDENT 0.0
.TP
.B \-\-verbose, \-v
Show debug\-level log messages (default: False)
.UNINDENT
.INDENT 0.0
.TP
.B \-\-timeout TIMEOUT
timeout in seconds (default: None)
.UNINDENT
.INDENT 0.0
.TP
.B \-\-retry RETRY
max number of retries (default: 10)
.UNINDENT
.INDENT 0.0
.TP
.B \-\-no\-container\-init
do not run podman/docker with \fI\-\-init\fP (default: False)
.UNINDENT
.SH COMMANDS
.SS add\-repo
.sp
configure local package repository to also include the ceph repository.
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-release RELEASE]       use latest version of a named release (e.g., octopus)
.IP \(bu 2
[\-\-version VERSION]       use specific upstream version (x.y.z)
.IP \(bu 2
[\-\-dev DEV]               use specified bleeding edge build from git branch or tag
.IP \(bu 2
[\-\-dev\-commit DEV_COMMIT] use specified bleeding edge build from git commit
.IP \(bu 2
[\-\-gpg\-url GPG_URL]       specify alternative GPG key location
.IP \(bu 2
[\-\-repo\-url REPO_URL]     specify alternative repo location
.UNINDENT
.SS adopt
.sp
Adopt a daemon deployed with a different deployment tool.
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-name NAME, \-n NAME]       daemon name (type.id)
.IP \(bu 2
[\-\-style STYLE]              deployment style (legacy, ...)
.IP \(bu 2
[\-\-cluster CLUSTER]          cluster name
.IP \(bu 2
[\-\-legacy\-dir LEGACY_DIR]    base directory for legacy daemon data
.IP \(bu 2
[\-\-config\-json CONFIG_JSON]  Additional configuration information in JSON format
.IP \(bu 2
[\-\-skip\-firewalld]           Do not configure firewalld
.IP \(bu 2
[\-\-skip\-pull]                do not pull the latest image before adopting
.UNINDENT
.SS bootstrap
.sp
Bootstrap a cluster on the local host. It deploys a MON and a MGR and then also automatically
deploys the monitoring stack on this host (see \-\-skip\-monitoring\-stack) and calls
\fBceph orch host add $(hostname)\fP (see \-\-skip\-ssh).
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-config CONFIG, \-c CONFIG]    ceph conf file to incorporate
.IP \(bu 2
[\-\-mon\-id MON_ID]               mon id (default: local hostname)
.IP \(bu 2
[\-\-mon\-addrv MON_ADDRV]         mon IPs (e.g., [v2:localipaddr:3300,v1:localipaddr:6789])
.IP \(bu 2
[\-\-mon\-ip MON_IP]               mon IP
.IP \(bu 2
[\-\-mgr\-id MGR_ID]               mgr id (default: randomly generated)
.IP \(bu 2
[\-\-fsid FSID]                   cluster FSID
.IP \(bu 2
[\-\-log\-to\-file]                 configure cluster to log to traditional log files
.IP \(bu 2
[\-\-single\-host\-defaults]        configure cluster to run on a single host
.IP \(bu 2
[\-\-output\-dir OUTPUT_DIR]       directory to write config, keyring, and pub key files
.IP \(bu 2
[\-\-output\-keyring OUTPUT_KEYRING] location to write keyring file with new cluster admin and mon keys
.IP \(bu 2
[\-\-output\-config OUTPUT_CONFIG] location to write conf file to connect to new cluster
.IP \(bu 2
[\-\-output\-pub\-ssh\-key OUTPUT_PUB_SSH_KEY] location to write the cluster\(aqs public SSH key
.IP \(bu 2
[\-\-skip\-ssh                     skip setup of ssh key on local host
.IP \(bu 2
[\-\-initial\-dashboard\-user INITIAL_DASHBOARD_USER] Initial user for the dashboard
.IP \(bu 2
[\-\-initial\-dashboard\-password INITIAL_DASHBOARD_PASSWORD] Initial password for the initial dashboard user
.IP \(bu 2
[\-\-ssl\-dashboard\-port SSL_DASHBOARD_PORT] Port number used to connect with dashboard using SSL
.IP \(bu 2
[\-\-dashboard\-key DASHBOARD_KEY] Dashboard key
.IP \(bu 2
[\-\-dashboard\-crt DASHBOARD_CRT] Dashboard certificate
.IP \(bu 2
[\-\-ssh\-config SSH_CONFIG] SSH config
.IP \(bu 2
[\-\-ssh\-private\-key SSH_PRIVATE_KEY] SSH private key
.IP \(bu 2
[\-\-ssh\-public\-key SSH_PUBLIC_KEY] SSH public key
.IP \(bu 2
[\-\-ssh\-user SSH_USER]           set user for SSHing to cluster hosts, passwordless sudo will be needed for non\-root users\(aq
.IP \(bu 2
[\-\-skip\-mon\-network]            set mon public_network based on bootstrap mon ip
.IP \(bu 2
[\-\-skip\-dashboard]              do not enable the Ceph Dashboard
.IP \(bu 2
[\-\-dashboard\-password\-noupdate] stop forced dashboard password change
.IP \(bu 2
[\-\-no\-minimize\-config]          do not assimilate and minimize the config file
.IP \(bu 2
[\-\-skip\-ping\-check]             do not verify that mon IP is pingable
.IP \(bu 2
[\-\-skip\-pull]                   do not pull the latest image before bootstrapping
.IP \(bu 2
[\-\-skip\-firewalld]              Do not configure firewalld
.IP \(bu 2
[\-\-allow\-overwrite]             allow overwrite of existing \-\-output\-* config/keyring/ssh files
.IP \(bu 2
[\-\-allow\-fqdn\-hostname]         allow hostname that is fully\-qualified (contains ".")
.IP \(bu 2
[\-\-skip\-prepare\-host]           Do not prepare host
.IP \(bu 2
[\-\-orphan\-initial\-daemons]      Do not create initial mon, mgr, and crash service specs
.IP \(bu 2
[\-\-skip\-monitoring\-stack]       Do not automatically provision monitoring stack] (prometheus, grafana, alertmanager, node\-exporter)
.IP \(bu 2
[\-\-apply\-spec APPLY_SPEC]       Apply cluster spec after bootstrap (copy ssh key, add hosts and apply services)
.IP \(bu 2
[\-\-registry\-url REGISTRY_URL]   url of custom registry to login to. e.g. docker.io, quay.io
.IP \(bu 2
[\-\-registry\-username REGISTRY_USERNAME] username of account to login to on custom registry
.IP \(bu 2
[\-\-registry\-password REGISTRY_PASSWORD] password of account to login to on custom registry
.IP \(bu 2
[\-\-registry\-json REGISTRY_JSON] JSON file containing registry login info (see registry\-login command documentation)
.UNINDENT
.SS ceph\-volume
.sp
Run ceph\-volume inside a container:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm ceph\-volume inventory
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Positional arguments:
* [command]               command
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]                    cluster FSID
.IP \(bu 2
[\-\-config\-json CONFIG_JSON]      JSON file with config and (client.bootrap\-osd) key
.IP \(bu 2
[\-\-config CONFIG, \-c CONFIG]     ceph conf file
.IP \(bu 2
[\-\-keyring KEYRING, \-k KEYRING]  ceph.keyring to pass through to the container
.UNINDENT
.SS check\-host
.sp
check host configuration to be suitable for a Ceph cluster.
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-expect\-hostname EXPECT_HOSTNAME] Check that hostname matches an expected value
.UNINDENT
.SS deploy
.sp
deploy a daemon on the local host. Used by the orchestrator CLI:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm shell \-\- ceph orch apply <type> ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-name NAME]               daemon name (type.id)
.IP \(bu 2
[\-\-fsid FSID]               cluster FSID
.IP \(bu 2
[\-\-config CONFIG, \-c CONFIG] config file for new daemon
.IP \(bu 2
[\-\-config\-json CONFIG_JSON] Additional configuration information in JSON format
.IP \(bu 2
[\-\-keyring KEYRING]         keyring for new daemon
.IP \(bu 2
[\-\-key KEY]                 key for new daemon
.IP \(bu 2
[\-\-osd\-fsid OSD_FSID]       OSD uuid, if creating an OSD container
.IP \(bu 2
[\-\-skip\-firewalld]          Do not configure firewalld
.IP \(bu 2
[\-\-tcp\-ports                List of tcp ports to open in the host firewall
.IP \(bu 2
[\-\-reconfig]                Reconfigure a previously deployed daemon
.IP \(bu 2
[\-\-allow\-ptrace]            Allow SYS_PTRACE on daemon container
.UNINDENT
.SS enter
.sp
Run an interactive shell inside a running daemon container:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm enter \-\-name mgr.myhost.ysubfo
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Positional arguments:
* [command]               command
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]           cluster FSID
.IP \(bu 2
[\-\-name NAME, \-n NAME]  daemon name (type.id)
.UNINDENT
.SS install
.sp
install ceph package(s)
.sp
Positional arguments:
.INDENT 0.0
.IP \(bu 2
[packages]    packages
.UNINDENT
.SS inspect\-image
.sp
inspect local ceph container image.
.SS list\-networks
.sp
list IP networks
.SS ls
.sp
list daemon instances known to cephadm on \fBthis\fP host:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ cephadm ls
[
    {
        "style": "cephadm:v1",
        "name": "mgr.storage\-14b\-1.ysubfo",
        "fsid": "5110cb22\-8332\-11ea\-9148\-0894ef7e8bdc",
        "enabled": true,
        "state": "running",
        "container_id": "8562de72370a3836473ecfff8a22c9ccdd99815386b4692a2b30924fb5493c44",
        "container_image_name": "docker.io/ceph/ceph:v15",
        "container_image_id": "bc83a388465f0568dab4501fb7684398dca8b50ca12a342a57f21815721723c2",
        "version": "15.2.1",
        "started": "2020\-04\-21T01:16:41.831456",
        "created": "2020\-04\-21T01:16:41.775024",
        "deployed": "2020\-04\-21T01:16:41.415021",
        "configured": "2020\-04\-21T01:16:41.775024"
    },
\&...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-no\-detail]             Do not include daemon status
.IP \(bu 2
[\-\-legacy\-dir LEGACY_DIR] Base directory for legacy daemon data
.UNINDENT
.SS logs
.sp
print journald logs for a daemon container:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm logs \-\-name mgr.myhost.ysubfo
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This is similar to:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
journalctl \-u mgr.myhost.ysubfo
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Can also specify additional journal arguments:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm logs \-\-name mgr.myhost.ysubfo \-\- \-n 20 # last 20 lines
cephadm logs \-\-name mgr.myhost.ysubfo \-\- \-f # follow the log
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Positional arguments:
.INDENT 0.0
.IP \(bu 2
[command]               command (optional)
.UNINDENT
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]           cluster FSID
.IP \(bu 2
[\-\-name NAME, \-n NAME]  daemon name (type.id)
.UNINDENT
.SS prepare\-host
.sp
prepare a host for cephadm use
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-expect\-hostname EXPECT_HOSTNAME] Set hostname
.UNINDENT
.SS pull
.sp
Pull the ceph image:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm pull
.ft P
.fi
.UNINDENT
.UNINDENT
.SS registry\-login
.sp
Give cephadm login information for an authenticated registry (url, username and password).
Cephadm will attempt to log the calling host into that registry:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm registry\-login \-\-registry\-url [REGISTRY_URL] \-\-registry\-username [USERNAME]
                       \-\-registry\-password [PASSWORD]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Can also use a JSON file containing the login info formatted as:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
 "url":"REGISTRY_URL",
 "username":"REGISTRY_USERNAME",
 "password":"REGISTRY_PASSWORD"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
and turn it in with command:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm registry\-login \-\-registry\-json [JSON FILE]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-registry\-url REGISTRY_URL]   url of registry to login to. e.g. docker.io, quay.io
.IP \(bu 2
[\-\-registry\-username REGISTRY_USERNAME] username of account to login to on registry
.IP \(bu 2
[\-\-registry\-password REGISTRY_PASSWORD] password of account to login to on registry
.IP \(bu 2
[\-\-registry\-json REGISTRY_JSON] JSON file containing login info for custom registry
.IP \(bu 2
[\-\-fsid FSID]                   cluster FSID
.UNINDENT
.SS rm\-daemon
.sp
Remove a specific daemon instance
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-name NAME, \-n NAME]  daemon name (type.id)
.IP \(bu 2
[\-\-fsid FSID]           cluster FSID
.IP \(bu 2
[\-\-force]               proceed, even though this may destroy valuable data
.IP \(bu 2
[\-\-force\-delete\-data]   delete valuable daemon data instead of making a backup
.UNINDENT
.SS rm\-cluster
.sp
remove all daemons for a cluster
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]  cluster FSID
.IP \(bu 2
[\-\-force]      proceed, even though this may destroy valuable data
.UNINDENT
.SS rm\-repo
.sp
remove package repository configuration
.SS run
.sp
run a ceph daemon, in a container, in the foreground
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-name NAME, \-n NAME]  daemon name (type.id)
.IP \(bu 2
[\-\-fsid FSID]           cluster FSID
.UNINDENT
.SS shell
.sp
Run an interactive shell:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm shell
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Or one specific command inside a container:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
cephadm shell \-\- ceph orch ls
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Positional arguments:
.INDENT 0.0
.IP \(bu 2
[command]               command (optional)
.UNINDENT
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]                   cluster FSID
.IP \(bu 2
[\-\-name NAME, \-n NAME]          daemon name (type.id)
.IP \(bu 2
[\-\-config CONFIG, \-c CONFIG]    ceph.conf to pass through to the container
.IP \(bu 2
[\-\-keyring KEYRING, \-k KEYRING] ceph.keyring to pass through to the container
.IP \(bu 2
[\-\-mount MOUNT, \-m MOUNT]       mount a file or directory under /mnt in the container
.IP \(bu 2
[\-\-env ENV, \-e ENV]             set environment variable
.UNINDENT
.SS unit
.sp
Operate on the daemon\(aqs systemd unit.
.sp
Positional arguments:
.INDENT 0.0
.IP \(bu 2
[command]               systemd command (start, stop, restart, enable, disable, ...)
.UNINDENT
.sp
Arguments:
.INDENT 0.0
.IP \(bu 2
[\-\-fsid FSID]           cluster FSID
.IP \(bu 2
[\-\-name NAME, \-n NAME]  daemon name (type.id)
.UNINDENT
.SH AVAILABILITY
.sp
\fBcephadm\fP is part of Ceph, a massively scalable, open\-source, distributed storage system. Please refer to
the documentation at \fI\%http://docs.ceph.com/\fP for more information.
.SH SEE ALSO
.sp
ceph\-volume(8),
.SH COPYRIGHT
2010-2014, Inktank Storage, Inc. and contributors. Licensed under Creative Commons Attribution Share Alike 3.0 (CC-BY-SA-3.0)
.\" Generated by docutils manpage writer.
.
