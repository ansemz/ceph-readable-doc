.\" Man page generated from reStructuredText.
.
.TH "MOUNT.CEPH" "8" "Jan 10, 2022" "dev" "Ceph"
.SH NAME
mount.ceph \- mount a Ceph file system
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH 提纲
.nf
\fBmount.ceph\fP \fIname*@*fsid\fP\&.*fs_name*=/[\fIsubdir\fP] \fIdir\fP [\-o \fIoptions\fP ]
.fi
.sp
.SH 描述
.sp
\fBmount.ceph\fP 是在 Linux 主机上挂载 Ceph 文件系统的辅助程序。
它只负责把监视器主机名解析为 IP 地址、从硬盘读取认证密钥，
大多数实际工作由 Linux 内核客户端组件完成。
挂载一个 Ceph 文件系统的命令：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount.ceph name@07fe3187\-00d9\-42a3\-814b\-72a4d5e7d5be.fs_name=/ /mnt/mycephfs \-o mon_addr=1.2.3.4
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
挂载辅助程序可以从 ceph 配置文件读取集群的 FSID 。
我们建议通过 mount(8) 调用挂载辅助程序，像这样：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount \-t ceph name@.fs_name=/ /mnt/mycephfs \-o mon_addr=1.2.3.4
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
注意，这里的点 \fB\&.\fP 仍然是必要的，它是设备字符串的一部分。
.sp
mount 命令的第一个参数是设备部分，
它包括用来认证的 RADOS 用户名、文件系统名和
CephFS 内要挂载到挂载点的路径。
.sp
监视器地址可以通过 \fBmon_addr\fP 挂载选项传入，
可以传入多个监视器地址，用斜杠（ \fI/\fP ）分隔开即可。
只要有一个监视器地址就能成功挂载，
客户端可以从任意响应的监视器了解到所有监视器。
即便如此，最好指定多个监视器，免得正挂载的时候遇上那个挂了。
监视器地址的格式是 ip_address[:port] ，
如果端口没指定，就用默认端口 6789 。
.sp
如果没指定监视器地址，那么 \fBmount.ceph\fP 就会尝试用本地配置文件、和/或 DNS SRV 记录来获取监视器地址。
类似地，如果 Ceph 集群开启了认证（用的是 CephX ），
但命令却没指定 \fBsecret\fP 和 \fBsecretfile\fP ，
挂载辅助程序就会派生出一个子进程，
它会用标准的 Ceph 库例程去寻找密钥环、并从中获取密钥
（如果没指定监视器地址和 FSID ，也会一并寻找）。
.sp
可以挂载文件系统的子目录， mount 时，在设备部分的 "=" 后面、
紧跟着指定子目录的（绝对）路径即可。
.sp
mount 辅助程序的惯例是前两个选项分别为要挂载的设备和目标路径，
其它选项必须位于这些固定参数之后。
.SH 选项
.SS 基础的
.INDENT 0.0
.TP
\fBconf\fP
ceph.cong 文件的路径。这是用于初始化 Ceph 上下文的，
之后就能自动发现监视器和认证密钥了。
默认会在标准路径内搜寻 ceph.conf 文件。
.TP
\fBmount_timeout\fP
整数（秒）。默认：60
.TP
\fBms_mode=<legacy|crc|secure|prefer\-crc|prefer\-secure>\fP
设置客户端用来传输的连接模式，
可用模式有：
.INDENT 7.0
.IP \(bu 2
\fBlegacy\fP: 使用 v1 信使协议和集群通讯；
.IP \(bu 2
\fBcrc\fP: 使用 v2 信使协议，没有线路加密；
.IP \(bu 2
\fBsecure\fP: 使用 v2 信使协议，有线路加密；
.IP \(bu 2
\fBprefer\-crc\fP: crc 模式，如果拒绝就是用 secure 模式；
.IP \(bu 2
\fBprefer\-secure\fP: secure 模式，如果拒绝就是用 crc 模式；
.UNINDENT
.TP
\fBmon_addr\fP
集群监视器的地址，格式是 ip_address[:port] 。
.TP
\fBfsid\fP
集群的 FSID ，可以用 \fIceph fsid\fP 命令找到。
.TP
\fBsecret\fP
用于 CephX 的密钥。这个选项不安全，因为它把密钥暴露在了命令行，
用 secretfile 选项可避免此问题。
.TP
\fBsecretfile\fP
包含密钥的文件路径， CephX 要用到。
.TP
\fBrecover_session=<no|clean>\fP
设置重连模式，以防客户端被屏蔽。
可用的模式有 \fBno\fP 和 \fBclean\fP ，默认是 \fBno\fP 。
.INDENT 7.0
.IP \(bu 2
\fBno\fP: 客户端探测到自己被屏蔽后永远不要尝试重连。
被屏蔽的客户端不会尝试重连，并且它们的操作也会失败。
.IP \(bu 2
\fBclean\fP: 客户端们探测到自己被屏蔽后会自动重连到 Ceph 集群。
在重连期间，客户端会丢弃脏数据、元数据，使得页缓存和可写的文件句柄失效。
重连后，各文件锁会落伍，因为 MDS 失去了对它们的追踪。
如果一个 inode 内有落伍的文件锁，所有落伍文件锁释放之前，
这个 inode 不允许读写。
.UNINDENT
.UNINDENT
.SS 高级的
.INDENT 0.0
.TP
\fBcap_release_safety\fP
整数。默认：自行计算
.TP
\fBcaps_wanted_delay_max\fP
整数，能力释放延迟时间。默认：60
.TP
\fBcaps_wanted_delay_min\fP
整数，能力释放延迟时间。默认：5
.TP
\fBdirstat\fP
用 \fIcat dirname\fP 读取文件信息。默认： off
.TP
\fBnodirstat\fP
不用 \fIcat dirname\fP 读取文件信息
.TP
\fBip\fP
本机 IP
.TP
\fBnoasyncreaddir\fP
读目录时不经过 dcache
.TP
\fBnocrc\fP
写入时不做 crc 校验
.TP
\fBnoshare\fP
创建新客户端例程，而不是和挂载同一集群的例程共享资源。
.TP
\fBosdkeepalive\fP
整数。默认：5
.TP
\fBosd_idle_ttl\fP
整数（秒）。默认：60
.TP
\fBrasize\fP
整数（字节数），最大预读尺寸，默认： 8388608 (8192*1024)
.TP
\fBrbytes\fP
目录的 st_size 报告产生于目录内容的递归尺寸。默认： on
.TP
\fBnorbytes\fP
目录的 st_size 无需通过递归目录内容来获取。
.TP
\fBreaddir_max_bytes\fP
整数。默认： 524288 （ 512*1024 ）
.TP
\fBreaddir_max_entries\fP
整数。默认： 1024
.TP
\fBrsize\fP
整数（字节数），最大读尺寸。默认： 16777216 (16*1024*1024)
.TP
\fBsnapdirname\fP
字符串，为快照的隐藏目录设置个名字。默认： .snap
.TP
\fBwrite_congestion_kb\fP
整数（ kb ），运行中的最大回写量，随可用内存变化。默认：根据可用内存计算
.TP
\fBwsize\fP
整数（字节数），最大写尺寸。默认： 16777216 (16*1024*1024)
（回写用较小的 wsize 和条带单元）
.TP
\fBwsync\fP
同步地执行所有命名空间操作。
这能确保只有收到 MDS 的回复才算命名空间操作完成。这是默认的。
.TP
\fBnowsync\fP
允许客户端异步执行命名空间操作。
启用此选项后，命名空间操作在收到 MDS 的回复前就可以完成，
如果它有足够的能力这样做。
.UNINDENT
.SH 实例
.sp
挂载整个文件系统：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount \-t ceph fs_user@.mycephfs2=/ /mnt/mycephfs
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
只挂载命名空间、文件系统的一部分：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount.ceph fs_user@.mycephfs2=/some/directory/in/cephfs /mnt/mycephfs
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
传入监视器主机的 IP 地址，可选的：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount.ceph fs_user@.mycephfs2=/ /mnt/mycephfs \-o mon_addr=192.168.0.1
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
如果端口不是标准的，随 IP 传入端口：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount.ceph fs_user@.mycephfs2=/ /mnt/mycephfs \-o mon_addr=192.168.0.1:7000
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
如果有多个监视器，传入时用 \fI/\fP 分隔开：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount.ceph fs_user@.mycephfs2=/ /mnt/mycephfs \-o mon_addr=192.168.0.1/192.168.0.2/192.168.0.3
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
传入 CephX 用户的密钥，可选的：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount.ceph fs_user@.mycephfs2=/ /mnt/mycephfs \-o secret=AQATSKdNGBnwLhAAnNDKnH65FmVKpXZJVasUeQ==
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
传入包含密钥的文件，以免把密钥留在 shell 命令历史里：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount.ceph fs_user@.mycephfs2=/ /mnt/mycephfs \-o secretfile=/etc/ceph/fs_username.secret
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
如果 Ceph 集群关闭了认证，忽略与凭证相关的选项：
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount.ceph fs_user@.mycephfs2=/ /mnt/mycephfs
.ft P
.fi
.UNINDENT
.UNINDENT
.SH 使用范围
.sp
\fBmount.ceph\fP 是 Ceph 的一部分，这是个伸缩力强、开源、分布式的存储系统，更多信息参见 \fI\%https://docs.ceph.com\fP 。
.SH 功能适用范围
.sp
\fBrecover_session=\fP 选项是在 v5.4 加进主线内核的。
\fBwsync\fP 和 \fBnowsync\fP 是在 v5.7 加入的。
.SH 参考
.sp
ceph\-fuse(8),
ceph(8)
.SH COPYRIGHT
2010-2014, Inktank Storage, Inc. and contributors. Licensed under Creative Commons Attribution Share Alike 3.0 (CC-BY-SA-3.0)
.\" Generated by docutils manpage writer.
.
